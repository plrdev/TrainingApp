1. Native parts

1.1 Change the app name (CountryFinder) & app id (remember, both iOS and Android need to be changed separately)
1.2 Update the app icons
1.3 #bonus Update splash screen

2. React Native UI - CountryFinder

2.1 Create CountryItem component, which displays country name, capital and population
    Country should have name, capital and population properties. Create one mock country object to test with.
    #bonus Create TypeScript interface for country and CountryItemProps
2.1.1 Add inline styling
2.1.2 Convert styling to StyleSheet.object
2.1.3 #bonus Convert styling to use styled-components -library (leverage JS ecosystem) 

2.2 Use useEffect hook and fetch to fetch all countries (https://restcountries.eu/rest/v2/all)
    #bonus Use axios instead of fetch (leverage JS ecosystem)
2.2.1 Use FlatList to display the countries using CountryItem as the list item component

2.3. Add TextInput field on top of Flatlist and a button (Pressable)
     #bonus have button on Android have a ripple effect when pressed
2.3.1. Filter the country list based on the text input when the button is pressed

2.4. Change list of countries to be empty at the beginning. Change text input to query countries instead
     of filtering results (Use endpoint: https://restcountries.eu/rest/v2/name/{name})

ðŸ’Ž#bonus Display the flag on the right side for countries (this is hard! Hint: Image component doesn't support svgs)
